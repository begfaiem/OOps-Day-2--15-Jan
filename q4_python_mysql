import mysql.connector #This line imports the mysql.connector module, which is a Python driver for connecting to MySQL databases.

class my_sql(): #a class named my_sql

    def __init__(self, host, user, password): #The __init__ method is the constructor for the class. It initializes the instance variables host, user, and password with the values passed during the class instantiation. 
        self.host = host
        self.user = user
        self.password = password
        self.mydb = None
        self.cursor = None

    def get_conn(self): #The get_conn method establishes a connection to the MySQL database using the connection parameters (host, user, password) provided during the instance creation.
        self.mydb = mysql.connector.connect(host=self.host, user=self.user, password=self.password)
        return self.mydb

    def get_cursor(self): #The get_cursor method creates a cursor object using the connected database (mydb).
        self.cursor = self.mydb.cursor()
        return self.cursor

    def database(self, db_name):
        try:
            self.db_name = db_name
            return self.cursor.execute(f"create database if not exists {self.db_name}")

        except Exception as e:
            print(e)

    def table(self, sqldata):
        try:
            self.sqldata = sqldata
            self.cursor.execute(f"use {self.db_name}")
            self.cursor.execute(f"create table if not exists {self.sqldata}")

        except Exception as e:
            print(e)

    def insert(self, data):
        try:
            self.data = data
            self.cursor.execute(f"use {self.db_name}")
            self.cursor.execute(self.data)
            self.mydb.commit()

        except Exception as e:
            print(e)

    def details(self, detail):
        self.detail = detail
        self.cursor.execute(self.detail)
        print(self.cursor.fetchall())

    def update(self, new_update):
        try:
            self.new_update = new_update
            self.cursor.execute(self.new_update)
            self.mydb.commit()

        except Exception as e:
            print(e)

    def delete(self, dell):
        try:
            self.dell = dell
            self.cursor.execute(self.dell)
            self.mydb.commit()

        except Exception as e:
            print(e)

# Corrected instance creation
db1 = my_sql("localhost", "abc", "password")
db1.get_conn()
db1.get_cursor()
db1.database("ineuronq4")  # Corrected method name
db1.table("tab2(rollno INT(10), name VARCHAR(30), address VARCHAR(50), age INT(10))")
db1.insert("insert into tab2 values(12345, 'Faheem', 'Noida', 27)")
db1.details("select * from ineuronq4.tab2")
db1.update("UPDATE ineuronq4.tab2 set age = 28 where age = 27")
db1.delete("delete from ineuronq4.tab2 where age= 28")
